package default_classes;

import org.junit.jupiter.api.Test;

import java.time.*;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class UtilsTest {

    @Test
    void isComparisonTrueTest01() {
        // This is generated by 'now < 24d04m2019y'
        // The time will never be smaller than that time again, so this is false
        assertFalse(Utils.isComparisonTrue(LocalDateTime.now(), ComparisonOperator.SMALLERTHAN, LocalDate.of(2019, 4, 24), false));
    }

    @Test
    void isComparisonTrueTest02() {
        int result = MonthDay.of(4,24).compareTo(MonthDay.now());

        // The test is dependant on the time the test is run. Therefor the tests asserts false, if the
        // Date of running the tests is before 24d04m, otherwise true.
        // If the date is equal too, it is also false.

        // This is generated by 'now < 24d04m'
        boolean bool = Utils.isComparisonTrue(LocalDateTime.now(), ComparisonOperator.SMALLERTHAN, MonthDay.of(4, 24), false);
        // If today before 24d04m
        if(result < 0) assertFalse(bool);
        // If today after 24d04m
        else if (result > 0) assertTrue(bool);
        // If today equals 24d04m
        else assertFalse(bool);
    }

    @Test
    void isComparisonTrueTest03(){
        int curResult;
        if(LocalDateTime.now().getDayOfMonth() > 21) curResult = -1;
        else if (LocalDateTime.now().getDayOfMonth() < 21) curResult = 1;
        else curResult = 0;

        // Generated from 'now > 21d'
        boolean bool = Utils.isComparisonTrue(LocalDateTime.now(), ComparisonOperator.GREATERTHAN, 21, false);

        if(curResult < 0) assertTrue(bool);
        else if (curResult > 0) assertFalse(bool);
        else assertFalse(bool);
    }

    @Test
    void isComparisonTrueTest04(){
        int curResult = LocalTime.now().compareTo(LocalTime.of(11,10));

        // Generated from 'now < 11:10'
        boolean bool = Utils.isComparisonTrue(LocalDateTime.now(), ComparisonOperator.SMALLERTHAN, LocalTime.of(11, 10), false);

        if(curResult < 0) assertTrue(bool);
        else if (curResult > 0) assertFalse(bool);
        else assertFalse(bool);
    }

    @Test
    void isComparisonTrueTest05(){
        int curResult = LocalTime.of(11,10).compareTo(LocalTime.now());

        // Generated from 11:10 < now
        boolean bool = Utils.isComparisonTrue(LocalDateTime.now(), ComparisonOperator.SMALLERTHAN, LocalTime.of(11, 10), true);

        if(curResult < 0) assertTrue(bool);
        else if (curResult > 0) assertFalse(bool);
        else assertFalse(bool);
    }
}
